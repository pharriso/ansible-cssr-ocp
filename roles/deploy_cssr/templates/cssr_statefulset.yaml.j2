apiVersion: apps/v1
kind: StatefulSet
metadata:
  creationTimestamp: null
  labels:
    app: {{ cssr_name | lower }}
  name: {{ cssr_name | lower }}
  namespace: {{ cssr_namespace }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ cssr_name | lower }}
  strategy: {}
  template:
    metadata:
      annotations:
        openshift.io/scc: privileged
        k8s.v1.cni.cncf.io/networks: '[ { "name": "ens6f0np0-macvlan" }, { "name": "ens6f1np1-macvlan" } ]'
      creationTimestamp: null
      labels:
        app: {{ cssr_name | lower }}
    spec:
      nodeSelector:
        kubernetes.io/hostname: {{ ocp_node }}
      initContainers:
      - name: cssr-init-data
        image: quay.io/juniper-128t/128t-5121:latest
        imagePullPolicy: IfNotPresent
        securityContext:
          privileged: true
        command: ["/bin/bash"]
        args:
        - -c
        - >-
          set -x &&
          if [ ! -d /mnt/var-128technology ]; then cp -RPfp /var/128technology /mnt/var-128technology; fi &&
          if [ ! -d /mnt/etc-128t-monitoring  ]; then cp -RPfp /etc/128t-monitoring /mnt/etc-128t-monitoring; fi
        volumeMounts:
        - mountPath: /mnt
          name: {{ cssr_name | lower }}-data
      containers:
      - image: quay.io/juniper-128t/128t-5121:latest
        imagePullPolicy: IfNotPresent
        securityContext:
          privileged: true
        name: 128t
        resources:
          limits:
            cpu: "2"
            hugepages-2Mi: 4Gi
          requests:
            cpu: "2"
            hugepages-2Mi: 4Gi
        volumeMounts:
        - mountPath: /usr/lib/modules
          name: modules
          subPath: modules
        - mountPath: /dev
          name: dev
        - mountPath: /hugepages
          name: hugepage
        - name: {{ cssr_name | lower }}-data
          mountPath: /var/128technology
          subPath: var-128technology
        - name: {{ cssr_name | lower }}-data
          mountPath: /etc/128t-monitoring
          subPath: etc-128t-monitoring
        - name: salt-minion-id
          mountPath: /etc/salt/minion_id
          subPath: minion_id
        - name: cssr-preferences
          mountPath: /etc/preferences.json
          subPath: preferences.json
        lifecycle:
          preStop:
            exec:
              command:
              - sh
              - -c
              - service 128T stop
      preemptionPolicy: PreemptLowerPriority
      securityContext: {}
      tolerations:
      - effect: NoExecute
        key: node.kubernetes.io/not-ready
        operator: Exists
        tolerationSeconds: 300
      - effect: NoExecute
        key: node.kubernetes.io/unreachable
        operator: Exists
        tolerationSeconds: 300
      - effect: NoSchedule
        key: node.kubernetes.io/memory-pressure
        operator: Exists
      volumes:
      - name: modules
        hostPath:
          path: /mnt/cssr
          type: Directory
      - hostPath:
          path: /dev
          type: Directory
        name: dev
      - emptyDir:
          medium: HugePages
        name: hugepage
      - hostPath:
          path: /usr/lib/modules
          type: Directory
        name: modules-node
      - name: salt-minion-id
        configMap:
          name: {{ cssr_name | lower }}-salt-id
      - name: cssr-preferences
        configMap:
          name: {{ cssr_name | lower }}-preferences
      serviceAccount: privileged
      serviceAccountName: privileged
  volumeClaimTemplates:
  - metadata:
      name: {{ cssr_name | lower }}-data
    spec:
      accessModes: [ "ReadWriteOnce" ]
      storageClassName: "ocs-storagecluster-cephfs"
      resources:
        requests:
          storage: 512Mi
status: {}
